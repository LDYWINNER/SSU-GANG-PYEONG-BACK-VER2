{
  "name": "SSU-GANG-PYEONG-BACK-VER2",
  "version": "0.0.1",
  "description": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev": "STAGE=local nest start --watch",
    "start:debug": "STAGE=local nest start --debug --watch",
    "start:prodTemp": "STAGE=production pm2 start dist/main.js",
    "start:prod": "node dist/apps/api-server/main",
    "typeorm": "ts-node -r ./node_modules/tsconfig-paths/register ./node_modules/typeorm/cli.js --dataSource ./apps/api-server/src/database/data-source.ts",
    "migration:create": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js migration:create ./apps/api-server/src/database/migrations/Migration",
    "migration:generate": "npm run typeorm migration:generate ./apps/api-server/src/database/migrations/course",
    "migration:run": "npm run typeorm  migration:run",
    "migration:revert": "npm run typeorm migration:revert",
    "seed": "ts-node -r tsconfig-paths/register ./node_modules/typeorm-extension/bin/cli.cjs seed:run  -d ./apps/api-server/src/database/data-source.ts",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest --runInBand",
    "test:specific": "jest --watch --runInBand ./apps/api-server/test/integration/board.int.spec.ts",
    "test:unit:specific": "jest --watch --runInBand ./apps/api-server/test/unit/board/board-comment.service.spec.ts",
    "test:watch": "jest --watch --runInBand",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./apps/api-server/test/jest-e2e.json"
  },
  "dependencies": {
    "@js-joda/core": "^5.6.3",
    "@nestjs-modules/mailer": "^1.6.1",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.2.2",
    "@nestjs/core": "^10.0.0",
    "@nestjs/cqrs": "^10.2.7",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/schedule": "^4.0.2",
    "@nestjs/swagger": "^7.3.1",
    "@nestjs/terminus": "^10.2.3",
    "@nestjs/throttler": "^5.2.0",
    "@nestjs/typeorm": "^10.0.2",
    "@sentry/node": "^8.9.2",
    "@slack/webhook": "^7.0.2",
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "cross-env": "^7.0.3",
    "dotenv": "^16.4.5",
    "jsonwebtoken": "^9.0.2",
    "nodemailer": "^6.9.13",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.12.0",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "ts-mockito": "^2.6.1",
    "typeorm": "^0.3.20",
    "typeorm-extension": "^3.5.1",
    "uuid": "^10.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/bcrypt": "^5.0.2",
    "@types/cron": "^2.4.0",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/node": "^20.3.1",
    "@types/nodemailer": "^6.4.15",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "./coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/"
    ],
    "moduleNameMapper": {
      "^src/(.*)$": "<rootDir>/src/$1"
    }
  }
}
